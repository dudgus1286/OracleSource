-- employees 에서 전체 내용 조회
SELECT *
FROM EMPLOYEES e ;

-- first name, last name, job_id 조회
SELECT FIRST_NAME , LAST_NAME , JOB_ID FROM EMPLOYEES e ;

-- 사원번호가 176인 사람의 LAST_NAME 과 DEPARTMENT_ID 조회
SELECT LAST_NAME , DEPARTMENT_ID 
FROM EMPLOYEES e 
WHERE e.EMPLOYEE_ID = 176 ;

-- 연봉이 12000 이상 되는 직원들의 LAST_NAME과 SALARY 조회
SELECT LAST_NAME , SALARY 
FROM EMPLOYEES e 
WHERE SALARY >= 12000 ;

-- 연봉이 5000 에서 12000 의 범위 이외인 사람들의 LAST_NAME과 SALARY 조회
SELECT LAST_NAME , SALARY 
FROM EMPLOYEES e 
WHERE SALARY < 5000 OR SALARY > 12000 ;




-- 부서번호가 20, 50 부서에서 근무하는 사원들의 LAST_NAME,DEPARTMENT_ID 조회
SELECT LAST_NAME , DEPARTMENT_ID 
FROM EMPLOYEES e 
WHERE DEPARTMENT_ID IN (20, 50 );

-- 부서번호가 20, 50 부서에서 근무하는 사원들의 LAST_NAME,DEPARTMENT_ID 조회
-- 오름차순
SELECT LAST_NAME , DEPARTMENT_ID 
FROM EMPLOYEES e 
WHERE DEPARTMENT_ID IN (20, 50 )
ORDER BY LAST_NAME ASC, DEPARTMENT_ID ASC ;

-- 커미션을 버는 모든 사원들의 성씨, SALARY, COMMISSION_PCT 조회
SELECT LAST_NAME , SALARY , COMMISSION_PCT 
FROM EMPLOYEES e 
WHERE COMMISSION_PCT > 0 
ORDER BY SALARY DESC , COMMISSION_PCT DESC ;

-- SALARY 가 2500, 3500, 7000 이 아니며 JOB 이 SA_REP 나 ST_CLERK 사원 조회
SELECT *
FROM EMPLOYEES e 
WHERE SALARY NOT IN (2500, 3500, 7000) AND
JOB_ID IN ('SA_REP', 'ST_CLERK') ;

-- 2017-01-01 ~ 2017-12-31 사이에 고용된 사원들의 LAST_NAME, EMPLOYEE_ID, HIRE_DATE 조회
-- HIRE_DATE 내림차순 정렬
SELECT LAST_NAME, EMPLOYEE_ID, HIRE_DATE
FROM EMPLOYEES e 
WHERE HIRE_DATE >= '2017-01-01' AND HIRE_DATE <= '2017-12-31'
ORDER BY HIRE_DATE DESC;



-- BETWEEN A AND B
-- 부서번호가 20, 50인 부서에서 근무하고, 연봉이 5000 ~ 12000 사이인 사원들의 LAST_NAME, SALARY 조회
-- SALARY 오름차순
SELECT LAST_NAME, SALARY
FROM EMPLOYEES e 
WHERE DEPARTMENT_ID IN(20, 50) AND SALARY BETWEEN 5000 AND 12000
ORDER BY SALARY ASC ;

-- 2017-01-01 ~ 2017-12-31 사이에 고용된 사원들의 LAST_NAME, EMPLOYEE_ID, HIRE_DATE 조회
-- HIRE_DATE 내림차순 정렬
SELECT LAST_NAME, EMPLOYEE_ID, HIRE_DATE
FROM EMPLOYEES e 
WHERE HIRE_DATE BETWEEN '2017-01-01' AND '2017-12-31'
ORDER BY HIRE_DATE DESC ;


-- 연봉이 5000 에서 12000 의 범위 이외인 사람들의 LAST_NAME과 SALARY 조회
SELECT LAST_NAME , SALARY 
FROM EMPLOYEES e 
WHERE SALARY NOT BETWEEN 5000 AND 12000 ;




-- LAST_NAME 에 u 가 포함되는 사원들의 사번, 성씨 조회
SELECT EMPLOYEE_ID , LAST_NAME
FROM EMPLOYEES e
WHERE LAST_NAME LIKE '%u%';

-- 성씨의 4번째 문자가 a 인 사원들의 사번, 성씨 조회
SELECT EMPLOYEE_ID , LAST_NAME 
FROM EMPLOYEES e 
WHERE LAST_NAME LIKE '___a%';

-- 성씨에 a, 혹은 e 글자가 들어있는 사원들의 사번, 성씨 조회 후 성씨 기준 오름차순 조회
SELECT EMPLOYEE_ID , LAST_NAME 
FROM EMPLOYEES e 
WHERE LAST_NAME LIKE '%a%' OR LAST_NAME LIKE '%e%'
ORDER BY LAST_NAME ASC ;

-- 성씨의 a 와 e 글자가 들어있는 사원들의 사번, 성씨 조회 후 성씨 기준 오름차순 조회
SELECT EMPLOYEE_ID , LAST_NAME 
FROM EMPLOYEES e 
WHERE LAST_NAME LIKE '%a%' AND LAST_NAME LIKE '%e%'
ORDER BY LAST_NAME ASC ;
-- WHERE LAST_NAME LIKE '%a%e%' or LAST_NAME LIKE '%e%a%'
SELECT EMPLOYEE_ID , LAST_NAME 
FROM EMPLOYEES e 
WHERE LAST_NAME LIKE '%a%e%' or LAST_NAME LIKE '%e%a%'
ORDER BY LAST_NAME ASC ;


-- 2024-01-24
-- 매니저가 없는 사람들의 성씨, JOB_ID 조회
SELECT LAST_NAME , JOB_ID 
FROM EMPLOYEES e 
WHERE MANAGER_ID IS NULL;

-- ST_CLERK 인 JOB_ID 를 가진 사원이 없는 부서 ID 조회 (단 부서번호가 NULL인 사원 제외)
SELECT DEPARTMENT_ID
FROM EMPLOYEES e 
WHERE JOB_ID != 'ST_CLERK' AND DEPARTMENT_ID IS NOT NULL;
-- NOT IN (...) 사용 및 중복번호 제거
SELECT DISTINCT DEPARTMENT_ID
FROM EMPLOYEES e 
WHERE JOB_ID NOT IN ( 'ST_CLERK' ) AND DEPARTMENT_ID IS NOT NULL;

-- COMMISSION_PCT 가 NULL 이 아닌 사원들 중에서
-- COMMISSION = SALARY * COMMISSION_PCT를 구하여 사원번호, 이름, 잡아이디를 조회
SELECT EMPLOYEE_ID , FIRST_NAME , JOB_ID, (SALARY * COMMISSION_PCT ) AS "COMMISSION" 
FROM EMPLOYEES e 
WHERE COMMISSION_PCT IS NOT NULL;
-- NULL 값을 제외하지 않고 계산하게 한 경우 : NULL * 숫자 = NULL
SELECT EMPLOYEE_ID , FIRST_NAME , JOB_ID, SALARY, (SALARY * COMMISSION_PCT ) AS "COMMISSION" 
FROM EMPLOYEES e ;


-- 이름이 'Curtis' 인 사원의 이름, 성씨, 이메일, 폰번호, 직책아이디를 조회
-- 단 직책아이디 결과는 소문자로 출력
SELECT FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER , LOWER(JOB_ID)
FROM EMPLOYEES e
WHERE FIRST_NAME = 'Curtis' ;

-- 부서번호가 60, 70, 80, 90 인 사원들의 사원번호, 이름, 채용일자, 직책아이디 조회
-- 단 직책아이디가 IT_PROG 인 사원의 경우 프로그래머로 변경하여 출력
SELECT EMPLOYEE_ID , FIRST_NAME , HIRE_DATE , REPLACE(JOB_ID, 'IT_PROG', '프로그래머')
FROM EMPLOYEES e 
WHERE DEPARTMENT_ID IN(60, 70, 80, 90) ;

-- 직책 아이디가 AD_PRES, PU_CLERK 인 사원들의 사원번호, 이름, 직책 아이디 조회
-- 단 사원명은 이름과 성씨를 공백을 포함하여 연결
SELECT EMPLOYEE_ID , FIRST_NAME || ' ' || LAST_NAME AS NAME , JOB_ID 
FROM EMPLOYEES e 
WHERE JOB_ID IN('AD_PRES', 'PU_CLERK') ;